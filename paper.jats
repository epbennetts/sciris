<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">0</article-id>
<article-id pub-id-type="doi">N/A</article-id>
<title-group>
<article-title>Sciris: Simplifying scientific software in
Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0003-2517-2354</contrib-id>
<name>
<surname>Kerr</surname>
<given-names>Cliff C.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1545-6380</contrib-id>
<name>
<surname>Sanz-Leon</surname>
<given-names>Paula</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-9618-6457</contrib-id>
<name>
<surname>Abeysuriya</surname>
<given-names>Romesh G.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-3034-2330</contrib-id>
<name>
<surname>Chadderdon</surname>
<given-names>George L.</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Harbuz</surname>
<given-names>Vlad-Ştefan</given-names>
</name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Saidi</surname>
<given-names>Parham</given-names>
</name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-8943-2808</contrib-id>
<name>
<surname>del Mar Quiroga</surname>
<given-names>Maria</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-3724-2412</contrib-id>
<name>
<surname>Martin-Hughes</surname>
<given-names>Rowan</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">Sherrie Kelly</contrib-id>
<name>
<surname>Kelly</surname>
<given-names>Sherrie L.</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-8479-1860</contrib-id>
<name>
<surname>Cohen</surname>
<given-names>Jamie A.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6867-9265</contrib-id>
<name>
<surname>Stuart</surname>
<given-names>Robyn M.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-7"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Nachesa</surname>
<given-names>Anna</given-names>
</name>
<xref ref-type="aff" rid="aff-8"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Institute for Disease Modeling, Global Health Division,
Bill &amp; Melinda Gates Foundation, Seattle, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>School of Physics, University of Sydney, Sydney,
Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Burnet Institute, Melbourne, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>CAE USA, Tampa, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Saffron Software, Bucharest, Romania</institution>
</institution-wrap>
</aff>
<aff id="aff-6">
<institution-wrap>
<institution>Melbourne Data Analytics Platform, The University of
Melbourne, Melbourne, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-7">
<institution-wrap>
<institution>Department of Mathematical Sciences, University of
Copenhagen, Copenhagen, Denmark</institution>
</institution-wrap>
</aff>
<aff id="aff-8">
<institution-wrap>
<institution>Google, Zürich, Switzerland</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-12-05">
<day>5</day>
<month>12</month>
<year>2022</year>
</pub-date>
<volume>¿VOL?</volume>
<issue>¿ISSUE?</issue>
<fpage>¿PAGE?</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>python</kwd>
<kwd>scientific software development</kwd>
<kwd>computational science</kwd>
<kwd>high-performance containers</kwd>
<kwd>numerical utilities</kwd>
<kwd>plotting</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><ext-link ext-link-type="uri" xlink:href="http://sciris.org">Sciris</ext-link>
  aims to streamline the development of scientific software by making it
  easier to perform common tasks. Sciris provides classes and functions
  that simplify access to frequently used low-level functionality in the
  core libraries of the scientific Python ecosystem (such as
  <monospace>numpy</monospace> for math and
  <monospace>matplotlib</monospace> for plotting), as well as in
  libraries of broader scope (such as
  <monospace>multiprocess</monospace> for parallelization and
  <monospace>pickle</monospace> for saving and loading objects). While
  low-level functionality is valuable for developing robust software
  applications, it can divert focus from the scientific problems being
  solved. Some of Sciris’ key features include: ensuring consistent
  dictionary, list, and array types (e.g., enabling users to provide
  inputs as either lists or arrays); enabling ordered dictionary
  elements to be referenced by index; simplifying datetime arithmetic by
  allowing date input in multiple formats, including strings;
  simplifying the saving and loading of files and complex objects; and
  simplifying the parallel execution of code. Sciris makes writing
  scientific code in Python faster, more pleasant, and more accessible,
  especially for people without extensive training in software
  development. With Sciris, users can achieve the same functionality
  with fewer lines of code, avoid reinventing the wheel, and spend less
  time looking up recipes on Stack Overflow. Sciris also forms the basis
  of ScirisWeb, an additional set of tools for building Flask-based
  Python webapps.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <sec id="the-landscape-of-scientific-software">
    <title>The landscape of scientific software</title>
    <p>With the increasing availability of large volumes of data and
    computing resources, scientists across multiple fields of research
    have been able to tackle increasingly complex problems. But to
    harness these resources, the need for domain-specific software has
    become much greater. As the complexity of the questions being
    tackled has increased, so too has the software used to answer them,
    creating a steep learning curve and an increasing burden of code
    review
    (<xref alt="Nature Editorial Board, 2018" rid="ref-burden-codereview" ref-type="bibr">Nature
    Editorial Board, 2018</xref>).</p>
    <p>Scientific code workflows (e.g., either a full cycle in the
    development of a new software library, or in the execution of a
    one-off analysis) typically rely on multiple codebases, including
    but not limited to: low-level libraries, domain-specific open-source
    software, and self-developed and/or inherited Swiss-Army-knife
    toolboxes (whose original developer may or may not be around to pass
    on undocumented wisdom). Several scientific communities have adopted
    collaborative, community-driven, open-source software approaches due
    to the significant savings in development costs and increases in
    code quality that they afford, such as
    <ext-link ext-link-type="uri" xlink:href="https://www.astropy.org/"><monospace>astropy</monospace></ext-link>
    (<xref alt="Robitaille et al., 2013" rid="ref-robitaille2013astropy" ref-type="bibr">Robitaille
    et al., 2013</xref>),
    <ext-link ext-link-type="uri" xlink:href="https://fmriprep.org"><monospace>fmriprep</monospace></ext-link>
    (<xref alt="Esteban et al., 2019" rid="ref-esteban2019fmriprep" ref-type="bibr">Esteban
    et al., 2019</xref>), and
    <ext-link ext-link-type="uri" xlink:href="https://nextstrain.org"><monospace>nextstrain</monospace></ext-link>
    (<xref alt="Hadfield et al., 2018" rid="ref-hadfield2018nextstrain" ref-type="bibr">Hadfield
    et al., 2018</xref>). Despite this progress, a large fraction of
    scientific software development efforts remain a solo adventure
    (<xref alt="Kerr, 2019" rid="ref-kerr2019epidemiology" ref-type="bibr">Kerr,
    2019</xref>). This leads to proliferation of tools where resources
    are largely spent reinventing wheels of variable quality, which
    jeopardizes the code’s minimum requirements of being “re-runnable,
    repeatable, reproducible, reusable, and replicable”
    (<xref alt="Benureau &amp; Rougier, 2018" rid="ref-benureau2018re" ref-type="bibr">Benureau
    &amp; Rougier, 2018</xref>).</p>
    <p>Beyond these requirements, low-level programming abstractions may
    get in the way of clarifying the science. For instance, one of the
    reasons PyTorch has become popular in academic and research
    environments is its success in making models easier to write
    compared to TensorFlow
    (<xref alt="Lorica, 2017" rid="ref-pytorch-research" ref-type="bibr">Lorica,
    2017</xref>). The need for libraries that provide “simplifying
    interfaces” for research applications is reflected in the
    development of multiple libraries in scientific Python ecosystems
    that have enabled researchers to focus their time and efforts on
    solving problems, prototyping solutions, deploying applications, and
    educating their communities. In addition to PyTorch
    (simplifying/extending Tensorflow), other examples include seaborn
    (simplifying/extending Matplotlib)
    (<xref alt="Waskom, 2021" rid="ref-waskom2021seaborn" ref-type="bibr">Waskom,
    2021</xref>), pingouin (simplifying/extending pandas), and PyVista
    (simplifying/extending VTK)
    (<xref alt="Sullivan &amp; Kaszynski, 2019" rid="ref-sullivan2019pyvista" ref-type="bibr">Sullivan
    &amp; Kaszynski, 2019</xref>), among many others.</p>
  </sec>
  <sec id="sciris-in-practice">
    <title>Sciris in practice</title>
    <p>The name
    <ext-link ext-link-type="uri" xlink:href="https://github.com/sciris/sciris">Sciris</ext-link>
    is a portmanteau of “scientific” and “iris” (a reference to seeing
    clearly, as well as the Greek word for “rainbow”). We began work on
    it in 2014, initially to support development of
    <ext-link ext-link-type="uri" xlink:href="https://github.com/optimamodel/optima">Optima
    HIV</ext-link>
    (<xref alt="Kerr et al., 2015" rid="ref-kerr2015optima" ref-type="bibr">Kerr
    et al., 2015</xref>,
    <xref alt="2020" rid="ref-kerr2020optima" ref-type="bibr">2020</xref>).
    We repeatedly encountered the same inconveniences while building
    scientific webapps, and so we began collecting the tools we used to
    overcome them into a shared library. While Python is considered an
    easy-to-use language for beginners, the motivation that shaped
    Sciris’ evolution was to further lower the barriers to accessing the
    numerous supporting libraries we were using.</p>
    <p>Our investments in Sciris paid off when in early 2020 its
    combination of brevity and simplicity proved crucial in enabling the
    rapid development of the Covasim model of COVID-19 transmission
    (<xref alt="Kerr et al., 2021" rid="ref-kerr2021covasim" ref-type="bibr">Kerr
    et al., 2021</xref>). Covasim’s relative simplicity and readability,
    based in large part on its heavy use of Sciris, enabled it to become
    one of the most widely adopted models of COVID-19, used by students,
    researchers, and policymakers in over 30 countries
    (<xref alt="Kerr et al., 2022" rid="ref-kerr2022python" ref-type="bibr">Kerr
    et al., 2022</xref>).</p>
    <p>In addition to Optima HIV and Covasim, Sciris is currently used
    by a number of other scientific software tools, such as
    <ext-link ext-link-type="uri" xlink:href="https://github.com/optimamodel/nutrition">Optima
    Nutrition</ext-link>
    (<xref alt="Pearson et al., 2018" rid="ref-pearson2018optima" ref-type="bibr">Pearson
    et al., 2018</xref>), the
    <ext-link ext-link-type="uri" xlink:href="https://cascade.tools">Cascade
    Analysis Tool</ext-link>
    (<xref alt="Kedziora et al., 2019" rid="ref-kedziora2019cascade" ref-type="bibr">Kedziora
    et al., 2019</xref>),
    <ext-link ext-link-type="uri" xlink:href="https://atomica.tools">Atomica</ext-link>
    (<xref alt="The Atomica Team, 2020" rid="ref-atomica" ref-type="bibr">The
    Atomica Team, 2020</xref>), Optima TB
    (<xref alt="Goscé et al., 2021" rid="ref-gosce2021optima" ref-type="bibr">Goscé
    et al., 2021</xref>), the
    <ext-link ext-link-type="uri" xlink:href="http://hiptool.org">Health
    Interventions Prioritization Tool</ext-link>
    (<xref alt="Fraser-Hurt et al., 2021" rid="ref-fraser2021using" ref-type="bibr">Fraser-Hurt
    et al., 2021</xref>),
    <ext-link ext-link-type="uri" xlink:href="https://synthpops.org">SynthPops</ext-link>
    (<xref alt="Mistry et al., in preparation" rid="ref-synthpops" ref-type="bibr">Mistry
    et al., in preparation</xref>), and
    <ext-link ext-link-type="uri" xlink:href="https://fpsim.org">FPsim</ext-link>
    (<xref alt="O’Brien et al., 2022" rid="ref-o2022fpsim" ref-type="bibr">O’Brien
    et al., 2022</xref>).</p>
    <p>We believe using Sciris can lead to more efficient scientific
    code production for solo developers and teams alike, including
    increased longevity of new scientific libraries
    (<xref alt="Perkel, 2020" rid="ref-perkel2020challenge" ref-type="bibr">Perkel,
    2020</xref>). Some of the key functional aspects that Sciris
    provides are: (i) brevity through simple interfaces; (ii)
    “dejargonification”; (iii) fine-grained exception handling; and (iv)
    version management. We expand on each of these below, but first
    provide a vignette that illustrates many of Sciris’ features.</p>
  </sec>
</sec>
<sec id="vignette">
  <title>Vignette</title>
  <p>Compared with a domain-specific language like MATLAB, even
  relatively simple scientific code in Python can require significant
  “boilerplate”. This extra code can obscure the key logic of the
  scientific question being addressed.</p>
  <p>For example, imagine that we wish to sample random numbers from a
  user-defined function with varying noise levels, save the intermediate
  calculations, and plot the results. In vanilla Python, each of these
  operations is somewhat cumbersome.
  <xref alt="Figure 1" rid="figU003Ashowcase-code">Figure 1</xref>
  presents two functionally identical scripts; the one written with
  Sciris is considerably more readable and succinct.</p>
  <p>This vignette illustrates many of Sciris’ most-used features,
  including timing, parallelization, high-performance containers, file
  saving and loading, and plotting. For the lines of the script that
  differ, Sciris reduces the number of lines of code required from 33 to
  7, a 79% decrease.</p>
  <fig>
    <caption><p>Comparison of functionally identical scripts without
    Sciris (left) and with Sciris (right), showing a nearly five-fold
    reduction in lines of code. The resulting plots are shown in
    <xref alt="Figure 2" rid="figU003Ashowcase-output">Figure 2</xref>.
    <styled-content id="figU003Ashowcase-code"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/sciris-showcase-code.png" xlink:title="" />
  </fig>
  <fig>
    <caption><p>Output of the scripts shown in
    <xref alt="Figure 1" rid="figU003Ashowcase-code">Figure 1</xref>,
    without Sciris (left) and with Sciris (right). The two plots are
    identical except for the new high-contrast colormap available in
    Sciris.
    <styled-content id="figU003Ashowcase-output"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/sciris-showcase-output.png" xlink:title="" />
  </fig>
</sec>
<sec id="design-philosophy">
  <title>Design philosophy</title>
  <p>The aim of Sciris is to make common tasks simpler. Sciris includes
  implementations of heavily used code patterns and abstractions that
  facilitate the development and deployment of complex domain-specific
  scientific applications, and helps non-specialist audiences interact
  with these applications. We note that Sciris “stands on the shoulders
  of giants”, and as such is not intended as a replacement of these
  libraries, but rather as an interface that facilitates a more
  effective and sustainable development process through the following
  principles:</p>
  <p><italic>Brevity through simple interfaces</italic>. Sciris packages
  common patterns requiring multiple lines of code into single, simple
  functions. With these functions one can succinctly express and execute
  frequent plotting tasks (e.g., <monospace>sc.commaticks</monospace>,
  <monospace>sc.dateformatter</monospace>,
  <monospace>sc.plot3d</monospace>); ensure consistent types, including
  containers (e.g., <monospace>sc.toarray</monospace>,
  <monospace>sc.mergedicts</monospace>,
  <monospace>sc.mergelists</monospace>), or even perform line-by-line
  performance profiling (<monospace>sc.profile</monospace>). Brevity is
  also achieved by extending functionality of well established objects
  (e.g., <monospace>OrderedDict</monospace> via
  <monospace>sc.odict</monospace>) or methods (e.g.,
  <monospace>isinstance</monospace> via
  <monospace>sc.checktype</monospace> that enables the comparison of
  objects against higher-level types like
  <monospace>arraylike</monospace>).</p>
  <p><italic>Dejargonification</italic>. Sciris aims to use plain
  function names (e.g., <monospace>sc.smooth</monospace>,
  <monospace>sc.findnearest</monospace>,
  <monospace>sc.safedivide</monospace>) so that the resulting code is as
  scientifically clear and human-readable as possible. Sciris also
  provides some
  <ext-link ext-link-type="uri" xlink:href="https://www.mathworks.com/products/matlab.html">MATLAB</ext-link>-like
  functionality, and uses the same names (e.g.,
  <monospace>sc.tic</monospace> and <monospace>sc.toc</monospace>;
  <monospace>sc.boxoff</monospace>) to minimize the learning curve for
  scientists who have MATLAB experience.</p>
  <p><italic>Fine-grained exception handling</italic>. Across many
  classes and functions, Sciris uses the keyword
  <monospace>die</monospace>, enabling users to set a locally scoped
  level of strictness in the handling of exceptions. If
  <monospace>die=False</monospace>, Sciris is more forgiving and softly
  handles exceptions by using its default (opinionated) behavior, such
  as printing a warning and returning <monospace>None</monospace> so
  users can decide how to proceed. If <monospace>die=True</monospace>,
  it directly raises the corresponding exception and message. This
  flexibility reduces the need for try-catch blocks, which can distract
  from the code’s scientific logic.</p>
  <p><italic>Version management</italic>. Keeping track of dates,
  authors, and code versions, plus additional notes or comments, is an
  essential part of scientific projects. Sciris provides methods to
  easily save and load metadata to/from figure files, including Git
  information (<monospace>sc.savefig</monospace>,
  <monospace>sc.gitinfo</monospace>,
  <monospace>sc.loadmetadata</monospace>), as well as shortcuts for
  comparing module versions (<monospace>sc.compareversions</monospace>)
  or requiring them (<monospace>sc.require</monospace>).</p>
</sec>
<sec id="examples-of-key-features">
  <title>Examples of key features</title>
  <p>Here we illustrate a smattering of key features in greater detail;
  further information on installation and usage can be found at
  <ext-link ext-link-type="uri" xlink:href="https://docs.sciris.org">docs.sciris.org</ext-link>.
  <xref alt="Figure 3" rid="figU003Ablock-diagram">Figure 3</xref>
  illustrates the functional modules of Sciris. Sciris is available on
  pip (<monospace>pip install sciris</monospace>).</p>
  <fig>
    <caption><p>Block diagram of Sciris’ functionality, grouped by
    high-level concepts and types of tasks that are commonly performed
    in scientific
    code.<styled-content id="figU003Ablock-diagram"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/sciris-block-diagram-03.png" xlink:title="" />
  </fig>
  <sec id="high-performance-containers">
    <title>High-performance containers</title>
    <p>One of the key features in Sciris is
    <monospace>sc.odict</monospace>, a flexible container representing
    an associative array with the best-of-all-worlds features of lists,
    dictionaries, and numeric arrays. This is based on
    <monospace>OrderedDict</monospace> from
    <ext-link ext-link-type="uri" xlink:href="https://docs.python.org/3/library/collections.html"><monospace>collections</monospace></ext-link>,
    but supports list methods like integer indexing, key slicing, and
    item insertion:</p>
    <code language="python">&gt; data = sc.odict(a=[1,2,3], b=[4,5,6]) 
&gt; data['a'] == data[0]
&gt; data[:].sum() == 21
&gt; for i, key, value in data.enumitems():
     print(f'Item {i} is named &quot;{key}&quot; and has value {value}')
Item 0 is named &quot;a&quot; and has value [1, 2, 3]
Item 1 is named &quot;b&quot; and has value [4, 5, 6]</code>
  </sec>
  <sec id="numerical-utilities">
    <title>Numerical utilities</title>
    <p>Indexing arrays is a common task in NumPy, but can be difficult
    due to incompatibilities of object type.
    <monospace>sc.findinds</monospace> will find matches even if two
    things are not exactly equal due to differences in type (e.g.,
    floats vs. integers, lists vs. arrays). The code shown below
    produces the same result as calling
    <monospace>np.nonzero(np.isclose(arr, val))[0].</monospace></p>
    <code language="python">&gt; sc.findinds([2,3,6,3], 3.0) 
array([1,3])</code>
  </sec>
  <sec id="parallelization">
    <title>Parallelization</title>
    <p>A frequent hurdle scientists face is parallelization. Sciris
    provides <monospace>sc.parallelize</monospace>, which acts as a
    shortcut for using <monospace>multiprocess.Pool()</monospace>. By
    default it adjusts the pool size based on the CPUs available, but
    can also use either a fixed number of CPUs or allocate them
    dynamically based on load (<monospace>sc.loadbalancer</monospace>).
    This example shows three equivalent ways to iterate over multiple
    complex arguments:</p>
    <code language="python">&gt; def f(x, y):
&gt;     return x*y

&gt; out1 = sc.parallelize(func=f, iterarg=[(1,2),(2,3),(3,4)])
&gt; out2 = sc.parallelize(func=f, iterkwargs={'x':[1,2,3], 'y':[2,3,4]})
&gt; out3 = sc.parallelize(func=f, iterkwargs=[{'x':1, 'y':2}, 
                                            {'x':2, 'y':3}, 
                                            {'x':3, 'y':4}])</code>
  </sec>
  <sec id="plotting">
    <title>Plotting</title>
    <p>Numerous shortcuts for customizing and prettifying plots are
    available in Sciris. Several commonly used features are illustrated
    below, with the results shown in
    <xref alt="Figure 4" rid="figU003Aplotting-example">Figure 4</xref>:</p>
    <code language="python">&gt; sc.options(font='Garamond') # Set custom font
&gt; x = sc.daterange('2022-06-01', '2022-12-31', as_date=True) # Create dates
&gt; y = sc.smooth(np.random.randn(len(x))**2)*1000 # Create smoothed random numbers
&gt; c = sc.vectocolor(y, cmap='turbo') # Set colors proportional to y values
&gt; plt.scatter(x, y, c=c) # Plot the data
&gt; sc.dateformatter() # Automatic x-axis date formatter
&gt; sc.commaticks() # Add commas to y-axis tick labels
&gt; sc.setylim() # Automatically set the y-axis limits
&gt; sc.boxoff() # Remove the top and right axis spines</code>
    <fig>
      <caption><p>Example of plot customizations via Sciris, including
      x- and y-axis tick labels and the
      font.<styled-content id="figU003Aplotting-example"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/plotting-example.png" xlink:title="" />
    </fig>
  </sec>
</sec>
<sec id="scirisweb">
  <title>ScirisWeb</title>
  <p>While a full description of
  <ext-link ext-link-type="uri" xlink:href="http://github.com/sciris/scirisweb">ScirisWeb</ext-link>
  is beyond the scope of this paper, briefly, it builds on Sciris to
  enable the rapid development of Python-based webapps, including those
  powering
  <ext-link ext-link-type="uri" xlink:href="https://app.covasim.org">Covasim</ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://nutrition.optimamodel.com">Optima
  Nutrition</ext-link>. By default, ScirisWeb uses
  <ext-link ext-link-type="uri" xlink:href="https://vuejs.org">Vuejs</ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/sciris/sciris-js">sciris-js</ext-link>
  for the frontend,
  <ext-link ext-link-type="uri" xlink:href="https://flask.palletsprojects.com">Flask</ext-link>
  as the web framework,
  <ext-link ext-link-type="uri" xlink:href="https://redis.io">Redis</ext-link>
  for the (optional) database, and
  Matplotlib/<ext-link ext-link-type="uri" xlink:href="https://github.com/mpld3/mpld3">mpld3</ext-link>
  for plotting. However, ScirisWeb is completely modular, which means
  that it could also be used to (for example) link a
  <ext-link ext-link-type="uri" xlink:href="https://reactjs.org/">React</ext-link>
  frontend to a
  <ext-link ext-link-type="uri" xlink:href="https://www.mysql.com/">MySQL</ext-link>
  database with
  <ext-link ext-link-type="uri" xlink:href="https://plotly.com/">Plotly</ext-link>
  figures. This modularity is in contrast to full-stack solutions such
  as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/plotly/dash">Plotly
  Dash</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://streamlit.io">Streamlit</ext-link>,
  and
  <ext-link ext-link-type="uri" xlink:href="https://voila.readthedocs.io">Voilà</ext-link>.
  While these libraries are even easier to use than ScirisWeb (since
  they do not require any knowledge of JavaScript), they provide limited
  options for customization or switching between technology stacks. In
  contrast, ScirisWeb provides the flexibility of a custom-written
  webapp within the context of an “it just works” framework.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The Sciris Development Team (info@sciris.org) wishes to thank David
  J. Kedziora, Dominic Delport, Kevin M. Jablonka, Meikang Wu, and Dina
  Mistry for providing helpful feedback on the Sciris library. David P.
  Wilson, William B. Lytton, and Daniel J. Klein provided in-kind
  support of Sciris development. Financial and personnel support has
  been provided by the United States Defense Advanced Research Projects
  Agency (DARPA) Contract N66001-10-C-2008 (2010–2014), World Bank
  Assignment 1045478 (2011–2015), the Australian National Health and
  Medical Research Council (NHMRC) Project Grant APP1086540 (2015–2017),
  the Australian Research Council (ARC) Discovery Early Career Research
  Award (DECRA) Fellowship Grant DE140101375 (2014–2019), and the
  Institute for Disease Modeling (2019–present).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-kerr2021covasim">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Stuart</surname><given-names>Robyn M</given-names></name>
        <name><surname>Mistry</surname><given-names>Dina</given-names></name>
        <name><surname>Abeysuriya</surname><given-names>Romesh G</given-names></name>
        <name><surname>Rosenfeld</surname><given-names>Katherine</given-names></name>
        <name><surname>Hart</surname><given-names>Gregory R</given-names></name>
        <name><surname>Núñez</surname><given-names>Rafael C</given-names></name>
        <name><surname>Cohen</surname><given-names>Jamie A</given-names></name>
        <name><surname>Selvaraj</surname><given-names>Prashanth</given-names></name>
        <name><surname>Hagedorn</surname><given-names>Brittany</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Covasim: An agent-based model of COVID-19 dynamics and interventions</article-title>
      <source>PLOS Computational Biology</source>
      <publisher-name>Public Library of Science San Francisco, CA USA</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>17</volume>
      <issue>7</issue>
      <fpage>e1009149</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-kerr2022python">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Stuart</surname><given-names>Robyn M</given-names></name>
        <name><surname>Mistry</surname><given-names>Dina</given-names></name>
        <name><surname>Abeysuriya</surname><given-names>Romesh G</given-names></name>
        <name><surname>Cohen</surname><given-names>Jamie A</given-names></name>
        <name><surname>George</surname><given-names>Lauren</given-names></name>
        <name><surname>Jastrzebski</surname><given-names>Michał</given-names></name>
        <name><surname>Famulare</surname><given-names>Michael</given-names></name>
        <name><surname>Wenger</surname><given-names>Edward</given-names></name>
        <name><surname>Klein</surname><given-names>Daniel J</given-names></name>
      </person-group>
      <article-title>Python vs. The pandemic: A case study in high-stakes software development</article-title>
      <source>Proceedings of the 21st Python in Science Conference (SciPy 2022)</source>
      <year iso-8601-date="2022">2022</year>
    </element-citation>
  </ref>
  <ref id="ref-kerr2015optima">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Stuart</surname><given-names>Robyn M</given-names></name>
        <name><surname>Gray</surname><given-names>Richard T</given-names></name>
        <name><surname>Shattock</surname><given-names>Andrew J</given-names></name>
        <name><surname>Fraser-Hurt</surname><given-names>Nicole</given-names></name>
        <name><surname>Benedikt</surname><given-names>Clemens</given-names></name>
        <name><surname>Haacker</surname><given-names>Markus</given-names></name>
        <name><surname>Berdnikov</surname><given-names>Maxim</given-names></name>
        <name><surname>Mahmood</surname><given-names>Ahmed Mohamed</given-names></name>
        <name><surname>Jaber</surname><given-names>Seham Abdalla</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Optima: A model for HIV epidemic analysis, program prioritization, and resource optimization</article-title>
      <source>Journal of Acquired Immune Deficiency Syndromes</source>
      <publisher-name>LWW</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <volume>69</volume>
      <issue>3</issue>
      <fpage>365</fpage>
      <lpage>376</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kerr2020optima">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Stuart</surname><given-names>Robyn M</given-names></name>
        <name><surname>Kedziora</surname><given-names>David J</given-names></name>
        <name><surname>Brown</surname><given-names>Amber</given-names></name>
        <name><surname>Abeysuriya</surname><given-names>Romesh</given-names></name>
        <name><surname>Chadderdon</surname><given-names>George L</given-names></name>
        <name><surname>Nachesa</surname><given-names>Anna</given-names></name>
        <name><surname>Wilson</surname><given-names>David P</given-names></name>
      </person-group>
      <article-title>Optima HIV methodology and approach</article-title>
      <source>Tackling the world’s fastest-growing HIV epidemic</source>
      <person-group person-group-type="editor">
        <name><surname>Zhao</surname><given-names>Feng</given-names></name>
        <name><surname>Benedikt</surname><given-names>C</given-names></name>
        <name><surname>Wilson</surname><given-names>David</given-names></name>
      </person-group>
      <publisher-name>The World Bank</publisher-name>
      <publisher-loc>Washington, DC</publisher-loc>
      <year iso-8601-date="2020">2020</year>
      <fpage>291</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-kedziora2019cascade">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kedziora</surname><given-names>David J</given-names></name>
        <name><surname>Abeysuriya</surname><given-names>Romesh</given-names></name>
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Chadderdon</surname><given-names>George L</given-names></name>
        <name><surname>Harbuz</surname><given-names>Vlad-Ștefan</given-names></name>
        <name><surname>Metzger</surname><given-names>Sarah</given-names></name>
        <name><surname>Wilson</surname><given-names>David P</given-names></name>
        <name><surname>Stuart</surname><given-names>Robyn M</given-names></name>
      </person-group>
      <article-title>The cascade analysis tool: Software to analyze and optimize care cascades</article-title>
      <source>Gates Open Research</source>
      <publisher-name>Gates Foundation-Open Access</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>3</volume>
    </element-citation>
  </ref>
  <ref id="ref-atomica">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>The Atomica Team</string-name>
      </person-group>
      <article-title>Atomica: A simulation engine for compartmental models.</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <uri>https://github.com/atomicateam/atomica</uri>
    </element-citation>
  </ref>
  <ref id="ref-pearson2018optima">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pearson</surname><given-names>Ruth</given-names></name>
        <name><surname>Killedar</surname><given-names>Madhura</given-names></name>
        <name><surname>Petravic</surname><given-names>Janka</given-names></name>
        <name><surname>Kakietek</surname><given-names>Jakub J</given-names></name>
        <name><surname>Scott</surname><given-names>Nick</given-names></name>
        <name><surname>Grantham</surname><given-names>Kelsey L</given-names></name>
        <name><surname>Stuart</surname><given-names>Robyn M</given-names></name>
        <name><surname>Kedziora</surname><given-names>David J</given-names></name>
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Skordis-Worrall</surname><given-names>Jolene</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Optima nutrition: An allocative efficiency tool to reduce childhood stunting by better targeting of nutrition-related interventions</article-title>
      <source>BMC Public Health</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>18</volume>
      <issue>1</issue>
      <fpage>1</fpage>
      <lpage>12</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gosce2021optima">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Goscé</surname><given-names>Lara</given-names></name>
        <name><surname>Abou Jaoude</surname><given-names>Gerard J</given-names></name>
        <name><surname>Kedziora</surname><given-names>David J</given-names></name>
        <name><surname>Benedikt</surname><given-names>Clemens</given-names></name>
        <name><surname>Hussain</surname><given-names>Azfar</given-names></name>
        <name><surname>Jarvis</surname><given-names>Sarah</given-names></name>
        <name><surname>Skrahina</surname><given-names>Alena</given-names></name>
        <name><surname>Klimuk</surname><given-names>Dzmitry</given-names></name>
        <name><surname>Hurevich</surname><given-names>Henadz</given-names></name>
        <name><surname>Zhao</surname><given-names>Feng</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Optima TB: A tool to help optimally allocate tuberculosis spending</article-title>
      <source>PLOS Computational Biology</source>
      <publisher-name>Public Library of Science San Francisco, CA USA</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>17</volume>
      <issue>9</issue>
      <fpage>e1009255</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-o2022fpsim">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>O’Brien</surname><given-names>Michelle L</given-names></name>
        <name><surname>Valente</surname><given-names>Annie</given-names></name>
        <name><surname>Chabot-Couture</surname><given-names>Guillaume</given-names></name>
        <name><surname>Proctor</surname><given-names>Joshua</given-names></name>
        <name><surname>Klein</surname><given-names>Daniel</given-names></name>
        <name><surname>Kerr</surname><given-names>Cliff</given-names></name>
        <name><surname>Zimmermann</surname><given-names>Marita</given-names></name>
      </person-group>
      <article-title>FPSim: An agent-based model of family planning for informed policy decision-making</article-title>
      <source>PAA 2022 annual meeting</source>
      <publisher-name>PAA</publisher-name>
      <year iso-8601-date="2022">2022</year>
    </element-citation>
  </ref>
  <ref id="ref-fraser2021using">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Fraser-Hurt</surname><given-names>Nicole</given-names></name>
        <name><surname>Hou</surname><given-names>Xiaohui</given-names></name>
        <name><surname>Wilkinson</surname><given-names>Thomas</given-names></name>
        <name><surname>Duran</surname><given-names>Denizhan</given-names></name>
        <name><surname>Abou Jaoude</surname><given-names>Gerard J</given-names></name>
        <name><surname>Skordis</surname><given-names>Jolene</given-names></name>
        <name><surname>Chukwuma</surname><given-names>Adanna</given-names></name>
        <name><surname>Lao Pena</surname><given-names>Christine</given-names></name>
        <name><surname>Tshivuila Matala</surname><given-names>Opope O</given-names></name>
        <name><surname>Gorgens</surname><given-names>Marelize</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Using allocative efficiency analysis to inform health benefits package design for progressing towards universal health coverage: Proof-of-concept studies in countries seeking decision support</article-title>
      <source>PLOS One</source>
      <publisher-name>Public Library of Science San Francisco, CA USA</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>16</volume>
      <issue>11</issue>
      <fpage>e0260247</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-kerr2019epidemiology">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
      </person-group>
      <article-title>Is epidemiology ready for big software?</article-title>
      <source>Pathogens and Disease</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>77</volume>
      <issue>1</issue>
      <fpage>ftz006</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-esteban2019fmriprep">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Esteban</surname><given-names>Oscar</given-names></name>
        <name><surname>Markiewicz</surname><given-names>Christopher J</given-names></name>
        <name><surname>Blair</surname><given-names>Ross W</given-names></name>
        <name><surname>Moodie</surname><given-names>Craig A</given-names></name>
        <name><surname>Isik</surname><given-names>A Ilkay</given-names></name>
        <name><surname>Erramuzpe</surname><given-names>Asier</given-names></name>
        <name><surname>Kent</surname><given-names>James D</given-names></name>
        <name><surname>Goncalves</surname><given-names>Mathias</given-names></name>
        <name><surname>DuPre</surname><given-names>Elizabeth</given-names></name>
        <name><surname>Snyder</surname><given-names>Madeleine</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>fMRIPrep: A robust preprocessing pipeline for functional MRI</article-title>
      <source>Nature Methods</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>16</volume>
      <issue>1</issue>
      <fpage>111</fpage>
      <lpage>116</lpage>
    </element-citation>
  </ref>
  <ref id="ref-hadfield2018nextstrain">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hadfield</surname><given-names>James</given-names></name>
        <name><surname>Megill</surname><given-names>Colin</given-names></name>
        <name><surname>Bell</surname><given-names>Sidney M</given-names></name>
        <name><surname>Huddleston</surname><given-names>John</given-names></name>
        <name><surname>Potter</surname><given-names>Barney</given-names></name>
        <name><surname>Callender</surname><given-names>Charlton</given-names></name>
        <name><surname>Sagulenko</surname><given-names>Pavel</given-names></name>
        <name><surname>Bedford</surname><given-names>Trevor</given-names></name>
        <name><surname>Neher</surname><given-names>Richard A</given-names></name>
      </person-group>
      <article-title>Nextstrain: Real-time tracking of pathogen evolution</article-title>
      <source>Bioinformatics</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>34</volume>
      <issue>23</issue>
      <fpage>4121</fpage>
      <lpage>4123</lpage>
    </element-citation>
  </ref>
  <ref id="ref-waskom2021seaborn">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Waskom</surname><given-names>Michael L</given-names></name>
      </person-group>
      <article-title>Seaborn: Statistical data visualization</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>60</issue>
      <fpage>3021</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-pytorch-research">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Lorica</surname><given-names>Ben</given-names></name>
      </person-group>
      <article-title>Why AI and machine learning researchers are beginning to embrace PyTorch</article-title>
      <year iso-8601-date="2017">2017</year>
      <uri>oreilly.com/radar/podcast/why-ai-and-machine-learning-researchers-are-beginning-to-embrace-pytorch</uri>
    </element-citation>
  </ref>
  <ref id="ref-synthpops">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mistry</surname><given-names>Dina</given-names></name>
        <name><surname>Kerr</surname><given-names>Cliff C</given-names></name>
        <name><surname>Abeysuriya</surname><given-names>Romesh G</given-names></name>
        <name><surname>Wu</surname><given-names>Meikang</given-names></name>
        <name><surname>Fisher</surname><given-names>Mary</given-names></name>
        <name><surname>Thompson</surname><given-names>Ace</given-names></name>
        <name><surname>Skrip</surname><given-names>Laura</given-names></name>
        <name><surname>Cohen</surname><given-names>Jamie A</given-names></name>
        <name><surname>Klein</surname><given-names>Daniel J</given-names></name>
      </person-group>
      <article-title>SynthPops: A generative model of human contact networks.</article-title>
    </element-citation>
  </ref>
  <ref id="ref-burden-codereview">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <string-name>Nature Editorial Board</string-name>
      </person-group>
      <article-title>Easing the burden of code review</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2018">2018</year>
      <volume>15</volume>
      <issue>9</issue>
      <fpage>641</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-robitaille2013astropy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Robitaille</surname><given-names>Thomas P</given-names></name>
        <name><surname>Tollerud</surname><given-names>Erik J</given-names></name>
        <name><surname>Greenfield</surname><given-names>Perry</given-names></name>
        <name><surname>Droettboom</surname><given-names>Michael</given-names></name>
        <name><surname>Bray</surname><given-names>Erik</given-names></name>
        <name><surname>Aldcroft</surname><given-names>Tom</given-names></name>
        <name><surname>Davis</surname><given-names>Matt</given-names></name>
        <name><surname>Ginsburg</surname><given-names>Adam</given-names></name>
        <name><surname>Price-Whelan</surname><given-names>Adrian M</given-names></name>
        <name><surname>Kerzendorf</surname><given-names>Wolfgang E</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Astropy: A community python package for astronomy</article-title>
      <source>Astronomy &amp; Astrophysics</source>
      <publisher-name>EDP Sciences</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <volume>558</volume>
      <fpage>A33</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-benureau2018re">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Benureau</surname><given-names>Fabien CY</given-names></name>
        <name><surname>Rougier</surname><given-names>Nicolas P</given-names></name>
      </person-group>
      <article-title>Re-run, repeat, reproduce, reuse, replicate: Transforming code into scientific contributions</article-title>
      <source>Frontiers in Neuroinformatics</source>
      <publisher-name>Frontiers Media SA</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>11</volume>
      <fpage>69</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-sullivan2019pyvista">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sullivan</surname><given-names>C</given-names></name>
        <name><surname>Kaszynski</surname><given-names>Alexander</given-names></name>
      </person-group>
      <article-title>PyVista: 3D plotting and mesh analysis through a streamlined interface for the visualization toolkit (VTK)</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>4</volume>
      <issue>37</issue>
      <fpage>1450</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-perkel2020challenge">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Perkel</surname><given-names>Jeffrey M</given-names></name>
      </person-group>
      <article-title>Challenge to scientists: Does your ten-year-old code still run?</article-title>
      <source>Nature</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>584</volume>
      <issue>7822</issue>
      <fpage>656</fpage>
      <lpage>659</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
